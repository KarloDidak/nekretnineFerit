// Generated by view binder compiler. Do not edit!
package com.nekretnineferit.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.core.widget.NestedScrollView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager2.widget.ViewPager2;
import com.nekretnineferit.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class Fragment6HouseDetailsBinding implements ViewBinding {
  @NonNull
  private final NestedScrollView rootView;

  @NonNull
  public final LinearLayout btnHouseDelete;

  @NonNull
  public final LinearLayout btnHouseUpdate;

  @NonNull
  public final CardView cvImages;

  @NonNull
  public final LinearLayout llArea;

  @NonNull
  public final LinearLayout llCategory;

  @NonNull
  public final LinearLayout llDescription;

  @NonNull
  public final ConstraintLayout llHouseChange;

  @NonNull
  public final LinearLayout llLocationPrice;

  @NonNull
  public final ProgressBar pbHouseDetails;

  @NonNull
  public final TextView tvArea;

  @NonNull
  public final TextView tvAreaTitle;

  @NonNull
  public final TextView tvCategory;

  @NonNull
  public final TextView tvCategoryTitle;

  @NonNull
  public final TextView tvDescription;

  @NonNull
  public final TextView tvDescriptionTitle;

  @NonNull
  public final TextView tvLocation;

  @NonNull
  public final TextView tvPrice;

  @NonNull
  public final View vLine;

  @NonNull
  public final ViewPager2 vpImages;

  private Fragment6HouseDetailsBinding(@NonNull NestedScrollView rootView,
      @NonNull LinearLayout btnHouseDelete, @NonNull LinearLayout btnHouseUpdate,
      @NonNull CardView cvImages, @NonNull LinearLayout llArea, @NonNull LinearLayout llCategory,
      @NonNull LinearLayout llDescription, @NonNull ConstraintLayout llHouseChange,
      @NonNull LinearLayout llLocationPrice, @NonNull ProgressBar pbHouseDetails,
      @NonNull TextView tvArea, @NonNull TextView tvAreaTitle, @NonNull TextView tvCategory,
      @NonNull TextView tvCategoryTitle, @NonNull TextView tvDescription,
      @NonNull TextView tvDescriptionTitle, @NonNull TextView tvLocation, @NonNull TextView tvPrice,
      @NonNull View vLine, @NonNull ViewPager2 vpImages) {
    this.rootView = rootView;
    this.btnHouseDelete = btnHouseDelete;
    this.btnHouseUpdate = btnHouseUpdate;
    this.cvImages = cvImages;
    this.llArea = llArea;
    this.llCategory = llCategory;
    this.llDescription = llDescription;
    this.llHouseChange = llHouseChange;
    this.llLocationPrice = llLocationPrice;
    this.pbHouseDetails = pbHouseDetails;
    this.tvArea = tvArea;
    this.tvAreaTitle = tvAreaTitle;
    this.tvCategory = tvCategory;
    this.tvCategoryTitle = tvCategoryTitle;
    this.tvDescription = tvDescription;
    this.tvDescriptionTitle = tvDescriptionTitle;
    this.tvLocation = tvLocation;
    this.tvPrice = tvPrice;
    this.vLine = vLine;
    this.vpImages = vpImages;
  }

  @Override
  @NonNull
  public NestedScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static Fragment6HouseDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static Fragment6HouseDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment6_house_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static Fragment6HouseDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnHouseDelete;
      LinearLayout btnHouseDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnHouseDelete == null) {
        break missingId;
      }

      id = R.id.btnHouseUpdate;
      LinearLayout btnHouseUpdate = ViewBindings.findChildViewById(rootView, id);
      if (btnHouseUpdate == null) {
        break missingId;
      }

      id = R.id.cvImages;
      CardView cvImages = ViewBindings.findChildViewById(rootView, id);
      if (cvImages == null) {
        break missingId;
      }

      id = R.id.ll_area;
      LinearLayout llArea = ViewBindings.findChildViewById(rootView, id);
      if (llArea == null) {
        break missingId;
      }

      id = R.id.ll_category;
      LinearLayout llCategory = ViewBindings.findChildViewById(rootView, id);
      if (llCategory == null) {
        break missingId;
      }

      id = R.id.ll_description;
      LinearLayout llDescription = ViewBindings.findChildViewById(rootView, id);
      if (llDescription == null) {
        break missingId;
      }

      id = R.id.llHouseChange;
      ConstraintLayout llHouseChange = ViewBindings.findChildViewById(rootView, id);
      if (llHouseChange == null) {
        break missingId;
      }

      id = R.id.ll_location_price;
      LinearLayout llLocationPrice = ViewBindings.findChildViewById(rootView, id);
      if (llLocationPrice == null) {
        break missingId;
      }

      id = R.id.pbHouseDetails;
      ProgressBar pbHouseDetails = ViewBindings.findChildViewById(rootView, id);
      if (pbHouseDetails == null) {
        break missingId;
      }

      id = R.id.tvArea;
      TextView tvArea = ViewBindings.findChildViewById(rootView, id);
      if (tvArea == null) {
        break missingId;
      }

      id = R.id.tv_area_title;
      TextView tvAreaTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvAreaTitle == null) {
        break missingId;
      }

      id = R.id.tvCategory;
      TextView tvCategory = ViewBindings.findChildViewById(rootView, id);
      if (tvCategory == null) {
        break missingId;
      }

      id = R.id.tv_category_title;
      TextView tvCategoryTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvCategoryTitle == null) {
        break missingId;
      }

      id = R.id.tvDescription;
      TextView tvDescription = ViewBindings.findChildViewById(rootView, id);
      if (tvDescription == null) {
        break missingId;
      }

      id = R.id.tv_description_title;
      TextView tvDescriptionTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvDescriptionTitle == null) {
        break missingId;
      }

      id = R.id.tvLocation;
      TextView tvLocation = ViewBindings.findChildViewById(rootView, id);
      if (tvLocation == null) {
        break missingId;
      }

      id = R.id.tvPrice;
      TextView tvPrice = ViewBindings.findChildViewById(rootView, id);
      if (tvPrice == null) {
        break missingId;
      }

      id = R.id.v_line;
      View vLine = ViewBindings.findChildViewById(rootView, id);
      if (vLine == null) {
        break missingId;
      }

      id = R.id.vpImages;
      ViewPager2 vpImages = ViewBindings.findChildViewById(rootView, id);
      if (vpImages == null) {
        break missingId;
      }

      return new Fragment6HouseDetailsBinding((NestedScrollView) rootView, btnHouseDelete,
          btnHouseUpdate, cvImages, llArea, llCategory, llDescription, llHouseChange,
          llLocationPrice, pbHouseDetails, tvArea, tvAreaTitle, tvCategory, tvCategoryTitle,
          tvDescription, tvDescriptionTitle, tvLocation, tvPrice, vLine, vpImages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
